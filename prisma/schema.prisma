// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  email String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  countryId Int 
  Country Country @relation(fields: [countryId], references: [id])
  Collection Collection[]
}

model Region {
  id Int @id @default(autoincrement())
  name String @unique @db.Text()
  SubRegion SubRegion[]
}

model SubRegion {
  id Int @id @default(autoincrement())
  name String @unique @db.Text()
  regionId Int
  Region Region @relation(fields: [regionId], references: [id])
  Country Country[]
  Product Product[]
}

model Country {
  id Int @id @default(autoincrement())
  name String @unique @db.Text()
  countryCode String @db.Text()
  flag String @db.VarChar(255)
  subRegionId Int 
  SubRegion SubRegion @relation(fields: [subRegionId], references: [id])
  User User[]
  products ProductsOnCountries[]
}

model Product {
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(255)
  description String @db.VarChar(255)
  lore String? @db.VarChar(255)
  image String? @db.VarChar(255)
  subregionId Int
  SubRegion SubRegion @relation(fields: [subregionId], references: [id])
  Category Category @relation(fields: [categoryId], references: [id])
  countries ProductsOnCountries[]
  categoryId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Pivot table (or JOIN table)
model ProductsOnCountries {
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  country Country @relation(fields: [countryId], references: [id], onDelete: Cascade)
  countryId Int

  @@id([productId, countryId])
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(255)
  Product Product[]
}

model Collection {
  id Int @id @default(autoincrement())
  User User @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}